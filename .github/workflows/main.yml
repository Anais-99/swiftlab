# Testing and DMZ (DeMilitarized Zone) workflow implementation.
# The DMZ workflow adds an intermediate branch, dmz, that developers use to merge their work (instead of master). If the merge results in breaking the tests, master will still contain working code, as it always should. The problems can be solved on dmz, and only when dmz is working again, its contants are automatically merged in master.
# Like this, master is always the latest working code.
name: Main
on: [push, pull_request]

jobs:
  test:
    # Tests are only run on pull requests, dmz, and master.
    if: |
      github.event_name == 'pull_request'
      || github.ref == 'refs/heads/dmz'
      || github.ref == 'refs/heads/master'
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
        test-config:
          - { scheme: SwiftLabTests, destination: platform=macOS }
          - { scheme: SwiftLabUITests, destination: platform=macOS }
    env:
      XCODE_PATH: /Applications/Xcode_12.2.app
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo xcode-select -s $XCODE_PATH
          xcode-select -p
      - run: set -o pipefail && xcodebuild test -scheme '${{ matrix.test-config.scheme }}' -destination '${{ matrix.test-config.destination }}' | xcpretty

  # DMZ job for automatic merging of the dmz branch on master.
  dmz:
    # Only runs on a push (or merge) on dmz.
    if: github.event_name == 'push' && github.ref == 'refs/heads/dmz'
    # The tests must pass in order to keep master working.
    #needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - run: |
          git fetch --unshallow origin master
          git fetch origin dmz
          git config user.name github-actions
          git config user.email github-actions@github.com
      - run: git merge --squash ${{github.sha}}
      - run: git commit -m "$(git log --format=%B -n 1 ${{github.sha}})" || true
      - run: git push origin master
